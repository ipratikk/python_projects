# Author - Pratik Goel (https:://linkedin.com/in/ipratikk)

import requests
import lxml.html
import sys

# The website used for this test  - https://www.codecademy.com/login

# The required HTTP requests were analysed using the inspect element dev tool on chrome browser.
# The form fields that were needed to be passed were generated by inspecting the login file on the network tab of the chrome dev tools
# The headers were provided in case the website used headers for login



class AutomateLogin:

    def __init__(self,url,username,password):
        self.username = username
        self.password = password
        self.url = url
        self.headers = {
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36'
        }

        #Storing the login data for the user
        self.payload = {
            'authenticity_token' : 'token',
            'redirect' : ' ',
            'user[login]': username,
            'user[password]': password
        }


    #To fetch the login page of the provided url
    def fetch(self):

        #Opening a new session
        with requests.Session() as session:

            #Getting the page from the url
            html = session.get(self.url)

            #Converting the generated html page to an lxml document for better searching of fields
            login_html = lxml.html.fromstring(html.content)

            #searching for all hidden input tags inside the login form and their values
            hidden_inputs = login_html.xpath('//form//input[@type="hidden"]')


            for x in hidden_inputs:
                try:

                    #if there is no value presennt, it raises and exception which is caught by the except block
                    if x.attrib["value"]:
                        self.payload[x.attrib["name"]]=x.attrib["value"]
                except:

                    #continues operation even after getting error in finding field value
                    pass
        return session


    def login(self,session):

        #Submiting the form details and logging to the server using the post method of the login form
        response = session.post(self.url,data=self.payload,headers = self.headers)

        #Checking for invalid credential status on the  generated page
        if("Wrong" in response.text):
            raise Exception("Invalid Credentials")

        #If no error is generated and the status code of the page is 200, login is successful
        print("Success" if response.status_code==200 else "Error")


def main():
    url = "https://www.codecademy.com/login"
    username = sys.argv[1]          #username passed as parameter
    password = sys.argv[2]          #password passed as parameter
    auto_login =  AutomateLogin(url,username,password)
    session = auto_login.fetch()
    auto_login.login(session)

if __name__ == "__main__":
    main()